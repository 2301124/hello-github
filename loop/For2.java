package loop;

// <for문1> 섹션5 강의6
// 문제: i부터 하나씩 증가하는 수를 endNum(마지막수) 까지 더해라(i~endNum 더하기)
//for문을 사용해서 풀어보자

// for문과 while문 비교 while2_2.java
// 둘을 비교했을 때 for문이 더 깔끔하다는 느낌을 받을 것이다
// for문은 초기화,조건 검사,반복 후 작업 등이 규칙적으로 한 줄에 모두 들어 있어
// 코드를 이해하기 더 쉽다
//특히 반복을 위해 값이 증가하는 카운터 변수(i)를 다른 부분과 명확하게 구분할 수 있다
//i가 index라서 인덱스 변수라고 부르기도 하다
// for문 여기에서 바로 변수 i가 카운터 변수이다
// 증가하면서 반복 횟수가 올라가고,
// 또 변수 i를 사용해서 계속 반복할지 아니면 빠져나갈지 판단할 수 있다
// 반복 횟수에 직접적인 영향을 주는 변수를 선언부터,값 증가, 또 조건식에 활용까지 for(초기식; 조건식; 증감식)구조를
// 활용해서 처리할 수 있다
// 개발자는 루프 횟수와 관련된 코드와 나머지 코드를 명확하게 구분할 수 있다
// while문을 보면
// while문에서 핵심적으로 돌아야 하는 로직이랑 반복을 위해서 카운터 변수를 증가시키는 거랑
// 같이 덩어리로 묶여 있는 느낌이다

// 카운터 변수가 있고, 그걸 몇회까지 반복할 거야 계속 증가하면서 반복할 거야
// 위의 경우는 while문 보다 for문을 사용하는 훨씬 더 깔끔하다
//


public class For2 {
    public static void main(String[] args) {
        int sum = 0;
        int endNum = 3;

        for(int i =1; i <= endNum; i++){
            sum += i;
            System.out.println("i = "+ i + "sum + " + sum);

        }
    }
}

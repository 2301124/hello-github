package operator;

//<연산자 우선순위> 섹션 3 강의 3
// 이 두예제를 보여준 이유
//sum3,sum4에 저장하는 두 연산은 같은 연산이다.
//그런데 괄호가 없는 연산은 보통은 연산을 보고 잠깐 연산자 우선순위를 생각을 해야한다.
// sum4와 같이 괄호를 명시적으로 사용하는 것이 더 명확하고 이해하기 쉽다.
// 이유는 코드를 몇자 줄여서 모호하거나 복잡해 지는 것보다는 코드가 더 많더라도 명확하고 단순한 것이 더 유지보수 하기 좋다.
// 핵심은 연산자 우선순위가 애매하거나 조금이라도 복잡하다면 언제나 괄호를 고려하자.
//코드를 봤을 때 항상 모든 개발이 그렇다. 코드를 봤을 때 생각해야 된다.
// 그러면 단순한 방법을 찾아야 한다.
//이걸 보고 생각해야 된다. 그러면 안 된다.
//생각해야 되겠네 괄호를 넣어두자.
// 실무에 가면 막 수천라인 수만라인 막 코드들이 있는데 그걸 계속 술술 읽어야 한다.
// 계속 막히도록 짜면 그 짠 사람이 잘못이다.
//  이야기를 왜 했냐
// 연산자가 엄청 많다.
// 그러면 이 많은 우선순위를 어떻게 외워야 할까?
// 사실 대부분의 실무 개발자들은 연산자 우선순위를 외우지 않는다.
//프로그래밍 언어는 무조건 이해를 해야지 외우는 건 있으면 안 된다.
//왜 이해를 해야 하냐면 이해를 하고, 필요하면 검색해서 찾으면 된다.
// 어떻게 우선순위를 알아야 하지?
//우선순위 2가지만 기억하라
// 1. 상식선에서 우선순위를 사용하자.
//우선순위는 상식선에서 생각하면 대부분 문제가 없다.
// 2.애매하면 괄호를 넣어라
// 코드를 봤을 때 우선순위를 고민해야 할 것 같으면, 괄호를 사용해서 우선순위를 명시적으로 지정하면 된다.


// 정리
// 연산자 우선순위는 상식선에서 생각하고, 애매하면 괄호를 사용하자.
//누구나 코드를 보고 쉽고 명확하게 이해할 수 있어야 한다.개발자들이 연산자 우선순위를 외우고 개발하는 것이 아니다.
// 복잡하면 명확하게 괄호를 넣어라.
// 개발에서 가장 중요한 것은 단순함과 명확함이다. 애매하거나 복잡하면 안 된다.



public class Operator4 {
    public static void main(String[] args) {
        int sum3 = 2 * 2 + 3 * 3;
        int sum4 = (2 * 2 ) + (3 * 3);
        System.out.println("sum3 = " + sum3);
        System.out.println("sum4 = " + sum4);
    }
}

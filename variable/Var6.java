package variable;
// <변수 선언과초기화> 섹션2 3강
// 변수는 초기화 해야한다.
//만약 변수를 초기화 하지 않고 사용한다면 어떻게 될까
// int a; ->초기값을 안 주고 출력을 해본다.
// System.out.println(a);
// 출력을 하면 어떤 일이 벌어질까
// 오류가 나면서 실행이 안 된다.
//자바가 컴파일이 안된다. 그 다음단계로 넘어가지 못한다.
//오류가 나고 실행이 안되는 이유
// 초기화 하지 않으면 무슨 값이 있을까?
// 컴퓬터에서 메모리는 여러 시스템이 함께 사용하는 공간이다.
//그래서 어떤 값들이 저장이 된다. 값을 치우는게 아니라 저장을 한다.
// 변수를 선언하면,메모리상의 어떤 공간을 빈 공간을 차지하고, 사용한다.
// 그런데 그 공간에 기존에 어떤 값이 있었는지는 아무도 모른다. 따라서 초기화를 하지 않으면 이상한 값이 출력될 수 있다. 이런문제를 예방하기 위해 자바는 변수를 초기화 하도록 강제한다.


// 지금 학습하는 변수는 변수는 지역 변수라고 하는데, 지역 변수는 개발자가 직접 초기화를 해주어야 한다.
//나중에 배울 클래스와 변수와 인스턴스 변수는 자바가 자동으로 초기화를 진행해준다.
// 초기화를 하지 않는 오류는 컴파일 에러다.
// 컴파일 에러는 자바 문법에 맞지 않았을 때 발생하는 에러다.
// 컴파일 에러는 오류를 빨리,명확하게 찾을 수있기 때문에 좋은 에러다.
// ~

//근데 그 공간은 원래 어떤 다른 애가 쓰고 있던 거다
//예를 들어서 게임을 하고 있는데, 메모리에 게임레밸이 들어 있었다.
//근데 게임을 종료한다.
// 종료할 때는 그 메모리에 게임레밸을 그대로 두고 그냥 프로그램이 종료가 된다.
// 게임레밸을 지우지 않는다. 지우는데 시간이 걸린다.
// 다른 애가 그냥 게임레밸의 메모리 공간을 차지한다
// int a 가 게임레밸을 메모리 공간을 차지했다고 생각하자.
// 실제는 게임레밸이 들어 있을 수 있고, 뭐가 들어 있을지 모른다.




public class Var6 {
    public static void main(String[] args){
        int a;
//        System.out.println(a);

    }
}
